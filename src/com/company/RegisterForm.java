package com.company;

import com.company.lib.EmailValidator;
import org.json.JSONException;
import org.json.JSONObject;

import javax.swing.*;
import java.io.IOException;

public class RegisterForm extends javax.swing.JPanel {

    /**
     * Creates new form RegisterForm
     */
    public RegisterForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        setBackground(new java.awt.Color(0, 0, 0));

        jLabel1 = new javax.swing.JLabel();
        LoginInput = new javax.swing.JTextField();
        EmailInput = new javax.swing.JTextField();
        PasswordInput = new javax.swing.JPasswordField();
        ConfirmPasswordInput = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        RegisterButton = new javax.swing.JButton();
        ReturnLoginButton = new javax.swing.JButton();
        LoginError = new javax.swing.JLabel();
        EmailError = new javax.swing.JLabel();
        PasswordError = new javax.swing.JLabel();
        ConfirmPasswordError = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Реестрація");

        LoginInput.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        EmailInput.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        PasswordInput.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        ConfirmPasswordInput.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Логін");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Почта");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Пароль");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Підтвердженння");

        RegisterButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        RegisterButton.setForeground(new java.awt.Color(255, 255, 255));
        RegisterButton.setContentAreaFilled(false);
        RegisterButton.setText("Зарееструватися");
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });

        ReturnLoginButton.setText("Увійти");
        ReturnLoginButton.setForeground(new java.awt.Color(255, 255, 255));
        ReturnLoginButton.setContentAreaFilled(false);
        ReturnLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnLoginButtonActionPerformed(evt);
            }
        });

        LoginError.setForeground(new java.awt.Color(255, 0, 51));

        EmailError.setForeground(new java.awt.Color(255, 0, 51));

        PasswordError.setForeground(new java.awt.Color(255, 0, 51));

        ConfirmPasswordError.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel4)
                                                        .addComponent(jLabel5))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(RegisterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(LoginInput)
                                                        .addComponent(EmailInput)
                                                        .addComponent(PasswordInput)
                                                        .addComponent(ConfirmPasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(ReturnLoginButton)
                                                .addGap(47, 47, 47)))
                                .addGap(96, 96, 96)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(LoginError)
                                        .addComponent(EmailError)
                                        .addComponent(PasswordError)
                                        .addComponent(ConfirmPasswordError))
                                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(57, 57, 57)
                                                .addComponent(LoginError)
                                                .addGap(18, 18, 18)
                                                .addComponent(EmailError)
                                                .addGap(18, 18, 18)
                                                .addComponent(PasswordError)
                                                .addGap(18, 18, 18)
                                                .addComponent(ConfirmPasswordError))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                        .addComponent(LoginInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jLabel2))
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(EmailInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addComponent(jLabel3))
                                                                .addGap(18, 18, 18)
                                                                .addComponent(PasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jLabel4))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(ConfirmPasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel5))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(RegisterButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ReturnLoginButton)))
                                .addContainerGap(25, Short.MAX_VALUE))
        );
    }// </editor-fold>

    private void ReturnLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        Main.lock.closeRegisterPanel();
        Main.lock.displayLoginPanel("");
    }

    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String login = LoginInput.getText().trim();
        String email = EmailInput.getText().trim();
        String password = new String(PasswordInput.getPassword());
        String passwordConfirm = new String(ConfirmPasswordInput.getPassword());
        boolean hasErrors = false;

        EmailValidator emailValidator = new EmailValidator();

        if(!emailValidator.validate(email)) {
            EmailError.setText("Помилкова почта");
            hasErrors = true;
        }

        if (login.equals("")) {
            LoginError.setText("Поле не заповнено");
            hasErrors = true;
        } else {
            LoginError.setText("");
        }
        if (email.equals("")) {
            EmailError.setText("Поле не заповнено");
            hasErrors = true;
        } else {
            EmailError.setText("");
        }
        if (password.equals("")) {
            PasswordError.setText("Поле не заповнено");
            hasErrors = true;
        } else {
            PasswordError.setText("");
        }
        if (passwordConfirm.equals("")) {
            ConfirmPasswordError.setText("Поле не заповнено");
            hasErrors = true;
        } else {
            ConfirmPasswordError.setText("");
        }

        if (!password.equals(passwordConfirm)) {
            PasswordError.setText("Паролі не зпівпадають");
            ConfirmPasswordError.setText("");
            hasErrors = true;
        } else {
            PasswordError.setText("");
            ConfirmPasswordError.setText("");
        }

        if (hasErrors) {
//            return;
        }

        String jsonString = new JSONObject()
                .put("login", login)
                .put("email", email)
                .put("password", password)
                .toString();

        try {
            String response = Main.httpPostRequest(Main.RegisterEndpoint, jsonString);

            try {
                System.out.println(response);
                JSONObject out = new JSONObject(response);

                if (out.has("errors")) {
                    JSONObject errors = out.getJSONObject("errors");

                    if (errors.has("login")) {
                        LoginError.setText(errors.get("login").toString());
                    }
                    if (errors.has("email")) {
                        EmailError.setText(errors.get("email").toString());
                    }
                    if (errors.has("password")) {
                        PasswordError.setText(errors.get("password").toString());
                    }
                } else {
                    JSONObject player = out.getJSONObject("player");

                    Main.lock.closeRegisterPanel();
                    Main.lock.displayLoginPanel(player.getString("login"));
                }
            } catch (JSONException e) {
                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), e.getMessage());
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), e.getMessage());
        } catch (InterruptedException e) {
            JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), e.getMessage());
        }
    }


    // Variables declaration - do not modify
    private javax.swing.JLabel ConfirmPasswordError;
    private javax.swing.JPasswordField ConfirmPasswordInput;
    private javax.swing.JLabel EmailError;
    private javax.swing.JTextField EmailInput;
    private javax.swing.JLabel LoginError;
    private javax.swing.JTextField LoginInput;
    private javax.swing.JLabel PasswordError;
    private javax.swing.JPasswordField PasswordInput;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JButton ReturnLoginButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration
}
